name: User-Java CI-CD

on:
  push:
    paths: ['apis/user-java/**']
    
  pull_request:
    branches: [ master ]

defaults:
  run:    
    working-directory: apis/user-java/

jobs:
  job1:
    runs-on: ubuntu-latest
    name: CI - Build and Test

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Clean Maven Install
      run: mvn clean install
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Create Issue (Build)
      if: ${{ failure() }}
      uses: alialaa/issue-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "API - User-Java - Failed Maven Build"
        body: "The API failed to build"
        assignees: | 
          selleny
          MSFTDELANEY
          JSandersMSFT

    - name: Run Tests
      run: mvn test   

    - name: Create Issue (Test)
      if: ${{ failure() }}
      uses: alialaa/issue-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "API - User-Java - Failed Maven Test"
        body: "The API failed to test"
        assignees: | 
          selleny
          MSFTDELANEY
          JSandersMSFT
          
  job2:
    needs: job1
    if: github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    name: CD - Deploy to ACR

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
      
    - name: 'Login to ACR'
      uses: azure/docker-login@v1
      with:
       login-server: openhackbxb3pxs9acr.azurecr.io
       username: ${{ secrets.REGISTRY_USERNAME }}
       password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - run: |
        docker build . -t openhackbxb3pxs9acr.azurecr.io/devopsoh/api-user-java:latest -t openhackbxb3pxs9acr.azurecr.io/devopsoh/api-user-java:${{ github.run_number }}
        docker push openhackbxb3pxs9acr.azurecr.io/devopsoh/api-user-java
        
  job3:
    needs: job2
    if: github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    name: CD - Deploy to App Service Slot (Staging)
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - uses: azure/docker-login@v1
      with:
        login-server: openhackbxb3pxs9acr.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackbxb3pxs9userjava'
        slot-name: 'staging'
        images: 'openhackbxb3pxs9acr.azurecr.io/devopsoh/api-user-java:latest'
    
    - name: Azure logout
      run: |
        az logout
        
  job4:
    needs: job3

    runs-on: ubuntu-latest
    name: CD - Verify Health (Staging)

    steps:
    - name: 'Verify Staging Heath Service (cURL/Axios) - Call API'
      uses: indiesdev/curl@v1
      id: healthcheckapi
      with:
        url: 'https://openhackbxb3pxs9userjava-staging.azurewebsites.net/api/healthcheck/user-java'
        method: 'GET'
        accept: 200
        body: '{ }'
        
    - name: 'Verify Staging Heath Service (cURL/Axios) - Process Response'
      if: ${{ steps.healthcheckapi.outputs.response.data.status == 'healthy' }}
      run: |
        echo "TRUE"