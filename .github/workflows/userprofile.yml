name: User Profile CI-CD

on:
  push:
    paths: ['apis/userprofile/**']
    
  pull_request:
    branches: [ master ]

defaults:
  run:    
    working-directory: apis/userprofile/

env:
  CI: true

jobs:
  job1:
    name: CI - Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      run: |
        # Build and test the project,
        npm install
        npm run build --if-present
        npm run test --if-present

  job2:
    needs: job1
    if: github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    name: CD - Deploy to ACR

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
      
    - name: 'Login to ACR'
      uses: azure/docker-login@v1
      with:
       login-server: openhackbxb3pxs9acr.azurecr.io
       username: ${{ secrets.REGISTRY_USERNAME }}
       password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - run: |
        docker build . -t openhackbxb3pxs9acr.azurecr.io/devopsoh/api-userprofile:${{ github.run_number }} -t openhackbxb3pxs9acr.azurecr.io/devopsoh/api-userprofile:latest
        docker push openhackbxb3pxs9acr.azurecr.io/devopsoh/api-userprofile

  job3:
    needs: job2
    if: github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    name: CD - Deploy to App Service Slot (Staging)
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
    
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - uses: azure/docker-login@v1
      with:
        login-server: openhackbxb3pxs9acr.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackbxb3pxs9userprofile'
        slot-name: 'staging'
        images: 'openhackbxb3pxs9acr.azurecr.io/devopsoh/api-userprofile:latest'

    - name: Add version as environment variable
      run: |
       az webapp config appsettings set --resource-group openhackbxb3pxs9rg --name openhackbxb3pxs9userprofile --slot staging --settings IMAGE_TAG=${{ github.run_number }}

    - name: Azure logout
      run: |
        az logout

  job4:
    needs: job3
    if: github.ref == 'refs/heads/master'
    
    name: CD - Swap App Service Slots (Staging-Production)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Verify Staging Heath Service (cURL/Axios) - Call API'
      uses: indiesdev/curl@v1
      id: healthcheckapistaging
      with:
        url: 'https://openhackbxb3pxs9userjava-staging.azurewebsites.net/api/healthcheck/user-java'
        method: 'GET'
        accept: 200
        body: '{ }'
        timeout: 3000ms

    - name: 'Verify Staging Heath Service (cURL/Axios) - Process Response (Healthy)'
      if: ${{ fromJson(steps.healthcheckapistaging.outputs.response).data.status == 'healthy' }}
      run: |
        az webapp deployment slot swap  -g openhackbxb3pxs9rg -n openhackbxb3pxs9userprofile --slot staging --target-slot production

    - name: 'Verify Staging Heath Service (cURL/Axios) - Process Response (Unhealthy)'
      if: ${{ fromJson(steps.healthcheckapistaging.outputs.response).data.status != 'healthy' }}
      
      uses: alialaa/issue-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "API - USER PROFILE - Container is not healthy"
        body: "build branch: ${{ github.ref }} commit ID: ${{ github.sha }} ${{ fromJson(steps.healthcheckapistaging.outputs.response)}}"
        assignees: | 
          selleny
          hraffaele
          MSFTDELANEY
          JSandersMSFT   

    - name: 'Verify Production Heath Service (cURL/Axios) - Call API'
      uses: indiesdev/curl@v1
      id: healthcheckapi
      with:
        url: 'https://openhackbxb3pxs9userjava.azurewebsites.net/api/healthcheck/user-java'
        method: 'GET'
        accept: 200
        body: '{ }'
        timeout: 3000ms

    - name: 'Verify Production Heath Service (cURL/Axios) - Process Response (Healthy)'
      if: ${{ fromJson(steps.healthcheckapistaging.outputs.response).data.status == 'healthy' }}
      run: |
        echo 'Production is healthy'
        az webapp config appsettings list --resource-group openhackbxb3pxs9rg --name openhackbxb3pxs9userprofile -o table

    - name: 'Verify Production Heath Service (cURL/Axios) - Process Response (Unhealthy)'
      if: ${{ fromJson(steps.healthcheckapi.outputs.response).data.status != 'healthy' }}
      run: |
        az webapp deployment slot swap  -g openhackbxb3pxs9rg -n openhackbxb3pxs9userprofile --slot staging --target-slot production

    - name: Azure logout
      run: |
        az logout